RUN	mkdir -p /node && chown -R ctrl /node && \
    echo -n "Gateway In The Sky Project " > /etc/motd && \
	echo -n "Securing Labs Ninja Dev Shell [Alpine:latest] " >> /etc/motd && \
	echo "overlaynetwork[TRUSTED] " >> /etc/motd && \
	echo " " >> /etc/motd && \
	echo "NodeJS Tools you can install with npm :" >> /etc/motd && \
	echo "Learn Node: https://www.npmjs.com/package/learnyounode " >> /etc/motd && \
	echo "renv: https://www.npmjs.com/package/renv " >> /etc/motd && \
	echo "Hexo Blog: https://www.npmjs.com/package/hexo " >> /etc/motd && \
	echo "PUML Diagrams: https://www.npmjs.com/package/node-plantuml " >> /etc/motd && \
	echo " " >> /etc/motd && \
	apk -Uuvv add --no-cache git \
	python py-pip zip util-linux coreutils findutils grep \
	jq tree groff less build-base linux-headers fontconfig openssl-dev \ 
	bc vim dialog ncurses ncurses-libs ncurses-terminfo libevent tmux openssh binutils xdg-utils \
 	rsync musl musl-dev go nodejs-npm nodejs-dev nodejs graphviz ttf-droid ttf-droid-nonlatin openjdk8-jre && \
	pip install --upgrade pip && \
    pip install powerline-status && \
	pip install awscli && \
    pip install aws-shell && \
    pip install s3cmd && \
    pip install TermRecord && \
    pip install Jinja2 && \
	rm -rf /root/.cache && \
	rm -rf /tmp/* && \
	rm -rf /var/cache/apk/*
USER ctrl
ENV NPM_CONFIG_PREFIX=/node
RUN npm config set package-lock false && \
    npm install -g npm && \
    npm update -g && \
   	npm install -g yoda-said 
USER root
